# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Release

on:
  release:
    types: [released]

jobs:
  build:
    name: Build webclient
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - name: Informations
      run: |
        echo "ref=${{github.ref}}"
        echo "action=${{github.event.action}}"
        echo "tag=${{github.event.release.tag_name}}"
        echo "branch=${{github.event.release.target_commitish}}"
        echo "upload_url=${{github.event.release.upload_url}}"
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-  
    - name: Setup of node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Npm install
      run: npm ci
    - name: Build webclient (homologation)
      if: github.event.release.target_commitish == 'master'
      run: npm run build:ci:hom
    - name: Build webclient (production)
      if: github.event.release.target_commitish == 'production'
      run: npm run build:ci:prod
    - name: Artifact build
      uses: actions/upload-artifact@v2
      with:
        name: release-package
        path: ./release-package
  package:
    name: Package webclient
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v2
      with:
        name: release-package
        path: release-package/
    - name: Craft package name
      id: filename
      run: echo "::set-output name=filename::release-${{github.event.release.target_commitish}}-${{github.event.release.tag_name}}.zip"
    - name: Zip build
      uses: papeloto/action-zip@v1
      with:
        files: release-package
        dest: ${{steps.filename.outputs.filename}}
    - name: Upload to GitHub Release
      uses: actions/upload-release-asset@v1.0.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{github.event.release.upload_url}}
        asset_path: ./${{steps.filename.outputs.filename}}
        asset_name: ${{steps.filename.outputs.filename}}
        asset_content_type: application/zip
    - name: Delete artifact
      uses: GeekyEggo/delete-artifact@v1.0.0
      with:
        name: release-package
        failOnError: false
